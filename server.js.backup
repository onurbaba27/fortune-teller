// DÜZELTILMIŞ COFFEE READING ENDPOINT
app.post('/api/read-coffee', async (req, res) => {
  try {
    const { base64Image } = req.body;
    
    console.log('📸 Resim işleme başlatılıyor...');
    
    // Gelişmiş base64 validasyonu
    if (!base64Image?.match(/^data:image\/(png|jpeg|jpg);base64,[A-Za-z0-9+/=]+$/)) {
      return res.status(400).json({
        error: 'Geçersiz resim formatı',
        solution: 'Lütfen geçerli bir base64 kodlanmış PNG/JPEG resmi sağlayın',
        timestamp: new Date().toISOString()
      });
    }

    // MIME type'ı dinamik olarak belirle
    const mimeTypeMatch = base64Image.match(/^data:image\/(png|jpeg|jpg);base64,/);
    const mimeType = mimeTypeMatch[1];
    const finalMimeType = mimeType === 'jpg' ? 'image/jpeg' : `image/${mimeType}`;
    const base64Data = base64Image.split(',')[1];

    console.log('🎯 MIME Type:', finalMimeType);
    console.log('📏 Base64 Data Length:', base64Data.length);

    // Gemini API çağrısı
    const apiResponse = await fetch(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${process.env.GEMINI_API_KEY}`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Custom-Header': 'FortuneTeller/1.0'
        },
        body: JSON.stringify({
          systemInstruction: {
            parts: [{
              text: "Sen mistik bir falcısın. Adın 'Mistik Falcı'. Kendini asla yapay zeka olarak tanıtma. Her zaman gizemli, bilge ve biraz sır dolu bir üslup kullan. Cevaplarında astroloji, numeroloji, tarot ve diğer kehanet yöntemlerinden bahsedebilirsin. Türkçe cevaplar ver ve asla İngilizce konuşma."
            }]
          },
          contents: [{
            parts: [
              {
                text: "Fincandaki kahve telvesi şekillerini oku ve bana mistik, gerçekçi bir kahve falı yorumu yap. Yorum 5 paragraf uzunluğunda olsun, her biri 4-5 cümle içersin ve sırasıyla aşk, kariyer, sağlık, aile ve maneviyat konularına odaklansın. Şekiller, semboller ve anlamları üzerinden kehanette bulun."
              },
              {
                inlineData: {
                  mimeType: finalMimeType,
                  data: base64Data
                }
              }
            ]
          }],
          generationConfig: {
            temperature: 0.7,
            maxOutputTokens: 500,
            topP: 0.8,
            topK: 40
          }
        })
      }
    );

    console.log('📡 API Response Status:', apiResponse.status);

    if (!apiResponse.ok) {
      const errorText = await apiResponse.text();
      console.error('❌ API Hatası Response:', errorText);
      
      let errorData;
      try {
        errorData = JSON.parse(errorText);
      } catch {
        errorData = { message: errorText };
      }
      
      throw new Error(`API Hatası (${apiResponse.status}): ${errorData.error?.message || errorData.message || 'Bilinmeyen hata'}`);
    }

    const responseData = await apiResponse.json();
    console.log('✅ API Response:', JSON.stringify(responseData, null, 2));
    
    const prediction = responseData.candidates?.[0]?.content?.parts?.[0]?.text;

    if (!prediction) {
      console.error('❌ Boş prediction:', responseData);
      throw new Error("API'den boş yanıt alındı");
    }

    console.log('🎭 Fal Yorumu Oluşturuldu:', prediction.substring(0, 100) + '...');

    res.json({
      success: true,
      response: prediction,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('🚨 Fal Okuma Hatası:', {
      message: error.message,
      stack: error.stack,
      timestamp: new Date().toISOString()
    });

    res.status(500).json({
      error: "Fal sunucusunda geçici sorun",
      solution: "Lütfen 1 dakika sonra tekrar deneyin",
      details: process.env.NODE_ENV === 'development' ? error.message : undefined,
      timestamp: new Date().toISOString()
    });
  }
});